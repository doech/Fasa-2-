import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;

public class MainGUI extends JFrame {
    private Mapa mapa;
    private JComboBox<String> peligrosComboBox;
    private JButton calificarButton;
    private JTextField calificacionField;
    private JTextField tipoField;
    private JTextField descripcionField;
    private JTextField latitudField;
    private JTextField longitudField;
    private JTextArea peligrosTextArea;

    public MainGUI(Mapa mapa) {
        this.mapa = mapa;
        setTitle("Aplicación de Peligros");
        setSize(500, 400);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLayout(new BorderLayout());

        //interfaz para registrar peligros
        JPanel panelRegistro = new JPanel(new GridLayout(5, 2));
        panelRegistro.setBorder(BorderFactory.createTitledBorder("Registrar Peligro"));

        panelRegistro.add(new JLabel("Tipo de peligro:"));
        tipoField = new JTextField(15);
        panelRegistro.add(tipoField);

        panelRegistro.add(new JLabel("Descripción:"));
        descripcionField = new JTextField(15);
        panelRegistro.add(descripcionField);

        panelRegistro.add(new JLabel("Latitud:"));
        latitudField = new JTextField(15);
        panelRegistro.add(latitudField);

        panelRegistro.add(new JLabel("Longitud:"));
        longitudField = new JTextField(15);
        panelRegistro.add(longitudField);

        JButton registrarPeligroButton = new JButton("Registrar Peligro");
        registrarPeligroButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                registrarPeligro();
            }
        });
        panelRegistro.add(new JLabel()); 
        panelRegistro.add(registrarPeligroButton);

        //mostrar peligros cercanos
        JPanel panelDeteccion = new JPanel(new BorderLayout());
        panelDeteccion.setBorder(BorderFactory.createTitledBorder("Detectar Peligro Cercano"));
        peligrosTextArea = new JTextArea(10, 40);
        peligrosTextArea.setEditable(false);
        JScrollPane scrollPane = new JScrollPane(peligrosTextArea);

        JPanel panelDeteccionInputs = new JPanel(new GridLayout(3, 2));
        JTextField latitudDeteccionField = new JTextField(10);
        JTextField longitudDeteccionField = new JTextField(10);
        JTextField rangoDeteccionField = new JTextField(10);

        panelDeteccionInputs.add(new JLabel("Latitud:"));
        panelDeteccionInputs.add(latitudDeteccionField);
        panelDeteccionInputs.add(new JLabel("Longitud:"));
        panelDeteccionInputs.add(longitudDeteccionField);
        panelDeteccionInputs.add(new JLabel("Rango:"));
        panelDeteccionInputs.add(rangoDeteccionField);

        JButton detectarPeligroButton = new JButton("Detectar Peligro");
        detectarPeligroButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                double latitud = Double.parseDouble(latitudDeteccionField.getText());
                double longitud = Double.parseDouble(longitudDeteccionField.getText());
                double rango = Double.parseDouble(rangoDeteccionField.getText());
                detectarPeligroCercano(latitud, longitud, rango);
            }
        });
        panelDeteccion.add(panelDeteccionInputs, BorderLayout.NORTH);
        panelDeteccion.add(scrollPane, BorderLayout.CENTER);
        panelDeteccion.add(detectarPeligroButton, BorderLayout.SOUTH);

        // calificar reparaciones
        JPanel panelCalificacion = new JPanel(new GridLayout(3, 1));
        panelCalificacion.setBorder(BorderFactory.createTitledBorder("Calificar Reparación"));

        peligrosComboBox = new JComboBox<>();
        calificacionField = new JTextField(10);
        calificarButton = new JButton("Calificar Reparación");

        calificarButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                calificarReparacion();
            }
        });

        panelCalificacion.add(new JLabel("Seleccionar peligro:"));
        panelCalificacion.add(peligrosComboBox);
        panelCalificacion.add(calificarButton);

        // configuración ventana principal
        JTabbedPane tabbedPane = new JTabbedPane();
        tabbedPane.addTab("Registrar Peligro", panelRegistro);
        tabbedPane.addTab("Detectar Peligros Cercanos", panelDeteccion);
        tabbedPane.addTab("Calificar Reparación", panelCalificacion);

add(tabbedPane, BorderLayout.CENTER);

        add(mainPanel, BorderLayout.CENTER);

        // actualizar los peligros reparados
        actualizarPeligrosReparados();
    }

    // registrar un peligro
    private void registrarPeligro() {
        String tipo = tipoField.getText();
        String descripcion = descripcionField.getText();
        double latitud = Double.parseDouble(latitudField.getText());
        double longitud = Double.parseDouble(longitudField.getText());

        Peligro nuevoPeligro = new Peligro(tipo, descripcion, latitud, longitud);
        mapa.agregarPeligro(nuevoPeligro);

        JOptionPane.showMessageDialog(this, "Peligro registrado exitosamente.");
        tipoField.setText("");
        descripcionField.setText("");
        latitudField.setText("");
        longitudField.setText("");
    }

    // detectar peligros cercanos
    private void detectarPeligroCercano(double latitud, double longitud, double rango) {
        ArrayList<Peligro> peligrosCercanos = mapa.getPeligrosCercanos(latitud, longitud, rango);
        peligrosTextArea.setText("");  // Limpiar el área de texto

        if (peligrosCercanos.isEmpty()) {
            peligrosTextArea.append("No se encontraron peligros cercanos.\n");
        } else {
            for (Peligro p : peligrosCercanos) {
                peligrosTextArea.append("Tipo: " + p.getTipo() +
                        ", Gravedad: " + p.getGravedad() +
                        ", Ubicación: (" + p.getLatitud() + ", " + p.getLongitud() + ")\n");
            }
        }
    }

    // calificar una reparación
    private void calificarReparacion() {
        String seleccion = (String) peligrosComboBox.getSelectedItem();
        if (seleccion != null) {
            JOptionPane.showMessageDialog(this, "Has calificado la reparación de: " + seleccion);
            // Aquí puedes implementar la lógica para manejar la calificación real
        } else {
            JOptionPane.showMessageDialog(this, "No hay peligros seleccionados.");
        }
    }

    // actualizar con peligros reparados metodo
    private void actualizarPeligrosReparados() {
        peligrosComboBox.removeAllItems();
        ArrayList<Peligro> peligros = mapa.getPeligros();
        for (Peligro p : peligros) {
            if (p.isReparado()) {
                peligrosComboBox.addItem(p.getTipo() + ": " + p.getDescripcion());
            }
        }
    }

    //main para iniciar la aplicación gráfica
    public static void main(String[] args) {
        Mapa mapa = new Mapa();
        MainGUI mainGUI = new MainGUI(mapa);
        mainGUI.setVisible(true);
    }
}

//revisar reducir lineas
        
